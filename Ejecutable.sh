#!/bin/bash

echo "üîç Verificando dependencias..."

# Verificar si Docker est√° instalado
if command -v docker &> /dev/null; then
    echo "‚úÖ Docker est√° instalado."
else
    echo "‚ùå Docker no est√° instalado o no est√° en el PATH."
    exit 1
fi

# Verificar si docker-compose est√° instalado
if command -v docker-compose &> /dev/null; then
    echo "‚úÖ docker-compose est√° instalado."
else
    echo "‚ùå docker-compose no est√° instalado o no est√° en el PATH."
    exit 1
fi

# Verificar si ngrok est√° instalado
if command -v ngrok &> /dev/null; then
    echo "‚úÖ Ngrok est√° instalado."
else
    echo "‚ùå Ngrok no est√° instalado o no est√° en el PATH."
    echo "‚ÑπÔ∏è  Desc√°rgalo desde https://ngrok.com/download y agr√©galo al PATH."
    exit 1
fi

# Verificar archivo docker-compose.yml
if [ -f "docker-compose.yml" ]; then
    echo "‚úÖ docker-compose.yml encontrado."
else
    echo "‚ùå No se encontr√≥ el archivo docker-compose.yml en el directorio actual."
    exit 1
fi

# Verificar archivo Dockerfile
if [ -f "Dockerfile" ]; then
    echo "‚úÖ Dockerfile encontrado."
else
    echo "‚ùå No se encontr√≥ el archivo Dockerfile."
    exit 1
fi

# Detener contenedores previos
echo "üßπ Deteniendo contenedores anteriores (si existen)..."
docker-compose down
if [ $? -eq 0 ]; then
    echo "‚úÖ Contenedores anteriores detenidos correctamente."
else
    echo "‚ö†Ô∏è No se pudo detener los contenedores anteriores (puede que no estuvieran activos)."
fi

sleep 5

# Preguntar al usuario si desea lanzar Ngrok
read -p "‚ùì ¬øDeseas iniciar Ngrok en una nueva ventana de cmd? (y/n): " launch_ngrok

if [[ "$launch_ngrok" == "y" || "$launch_ngrok" == "Y" ]]; then
    echo "üöÄ Lanzando Ngrok en nueva ventana de cmd..."
    powershell.exe -Command "Start-Process cmd -ArgumentList '/k ngrok http 3002'"
    sleep 5

    # Obtener la URL p√∫blica desde el API local con reintentos
NGROK_API="http://127.0.0.1:4040/api/tunnels"
ATTEMPTS=10
NGROK_URL=""

echo "‚è≥ Esperando a que Ngrok genere la URL p√∫blica..."

for ((i=1; i<=ATTEMPTS; i++)); do
    NGROK_URL=$(curl -s "$NGROK_API" | grep -oE 'https://[a-zA-Z0-9.-]+\.ngrok-free\.app' | head -n 1)
    
    if [[ -n "$NGROK_URL" ]]; then
        echo "‚úÖ Ngrok se inici√≥ correctamente: $NGROK_URL"
        break
    else
        echo "üîÅ Intento $i/$ATTEMPTS: a√∫n no hay URL p√∫blica, reintentando en 2s..."
        sleep 2
    fi
done

if [[ -z "$NGROK_URL" ]]; then
    echo "‚ùå No se pudo obtener una URL p√∫blica de Ngrok despu√©s de $ATTEMPTS intentos."
    echo "   Verifica que Ngrok est√© funcionando correctamente en otra ventana."
fi

else
    echo "‚è© Omitiendo lanzamiento de Ngrok por decisi√≥n del usuario."
fi

sleep 5

# Finalmente, levantar los contenedores en primer plano
echo "üê≥ Ejecutando docker-compose en primer plano..."
docker-compose up --build
